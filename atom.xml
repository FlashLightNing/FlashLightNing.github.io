<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>主页</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://FlashLightNing.github.io/"/>
  <updated>2016-04-07T15:50:27.488Z</updated>
  <id>http://FlashLightNing.github.io/</id>
  
  <author>
    <name>mingfeng lu</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>混沌图像加密总结(2)</title>
    <link href="http://FlashLightNing.github.io/2016/04/07/%E6%B7%B7%E6%B2%8C%E5%9B%BE%E5%83%8F%E5%8A%A0%E5%AF%86%E6%80%BB%E7%BB%93-2/"/>
    <id>http://FlashLightNing.github.io/2016/04/07/混沌图像加密总结-2/</id>
    <published>2016-04-07T15:32:43.000Z</published>
    <updated>2016-04-07T15:50:27.488Z</updated>
    
    <content type="html">&lt;p&gt;&amp;#160; &amp;#160; &amp;#160; &amp;#160;前面说到怎样区分不同类型的图片，参考了这篇博客 :&lt;a href=&quot;http://blog.csdn.net/fenglibing/article/details/7733496&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;表示不同文件类型的魔术数字&lt;/a&gt;&lt;br&gt;&amp;#160; &amp;#160; &amp;#160; &amp;#160;这里所说的表示不同文件类型的魔术数字，指定是文件的最开头的几个用于唯一区别其它文件类型的字节，有了这些魔术数字，我们就可以很方便的区别不同的文件，这也使得编程变得更加容易，&lt;br&gt;比如，一个JPEG文件，它开头的一些字节可能是类似这样的”ffd8 ffe0 0010 4a46 4946 0001 0101 0047 ……JFIF…..G“，这里”ffd8“就表示了这个文件是一个JPEG类型的文件，”ffe0“表示这是JFIF类型结构。&lt;br&gt;所以我们只需要判断图片开头的几个字节就可以得到它的类型，只要它的开头不等于ffd8，那么它就不是JPEG类型的图片&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;public static boolean getImageType(String imgPath) throws IOException &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	File image = new File(imgPath);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	InputStream is = new FileInputStream(image);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	byte[] bt = new byte[2];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	is.read(bt);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	StringBuilder stringBuilder = new StringBuilder();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	if (bt == null || bt.length &amp;lt;= 0) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		return false;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	for (int i = 0; i &amp;lt; bt.length; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		int v = bt[i] &amp;amp; 0xFF;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		String hv = Integer.toHexString(v);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		if (hv.length() &amp;lt; 2) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			stringBuilder.append(0);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		stringBuilder.append(hv);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	String number = stringBuilder.toString();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	System.out.println(number);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	if (number.equals(&amp;quot;ffd8&amp;quot;)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		return true;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	return false;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;这个方法只是用来判断是否为JPEG类型的图片，如果不是，就把它统一转为JPEG类型的图片：


&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * 将任意类型的转为JPEG类型的图片&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * 若已经为JPEG图片,则直接返回原地址;否则返回处理后的地址&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * @param inputPath&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * @param outputPath&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * @param type&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * @throws IOException&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public static String convertPicture(String inputPath, String outputPath,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		String type) throws IOException &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	boolean is_Jpeg = getImageType(inputPath);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	if (is_Jpeg) &amp;#123;//若已经为JPEG图片,则不用处理,直接返回&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		return inputPath;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	RenderedOp src2 = JAI.create(&amp;quot;fileload&amp;quot;, inputPath);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	OutputStream os2 = new FileOutputStream(outputPath);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	JPEGEncodeParam param2 = new JPEGEncodeParam();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	// 指定格式类型，jpg 属于 JPEG 类型&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	ImageEncoder enc2 = ImageCodec.createImageEncoder(&amp;quot;JPEG&amp;quot;, os2, param2);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	try &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		enc2.encode(src2);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		os2.close();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125; catch (IOException e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		e.printStackTrace();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	System.out.println(&amp;quot;转换成功&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	return outputPath;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;


如果要将其变成其他类型的图片，如bmp,png，只要将
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ImageCodec.createImageEncoder(&amp;quot;JPEG&amp;quot;, os2, param2);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

其中的JPEG换成BMP/PNG即可。完成图像类别的转换之后，就可以开开心心进行传输了~~，也不会报空指针错误了~~
&lt;/code&gt;&lt;/pre&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;#160; &amp;#160; &amp;#160; &amp;#160;前面说到怎样区分不同类型的图片，参考了这篇博客 :&lt;a href=&quot;http://blog.csdn.net/fenglibing/article/details/7733496&quot; target=&quot;_blank&quot; rel
    
    </summary>
    
    
      <category term="java" scheme="http://FlashLightNing.github.io/tags/java/"/>
    
      <category term="图像加密" scheme="http://FlashLightNing.github.io/tags/%E5%9B%BE%E5%83%8F%E5%8A%A0%E5%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>混沌序列图像加密传输总结（1）</title>
    <link href="http://FlashLightNing.github.io/2016/04/07/%E6%B7%B7%E6%B2%8C%E5%BA%8F%E5%88%97%E5%9B%BE%E5%83%8F%E5%8A%A0%E5%AF%86%E4%BC%A0%E8%BE%93/"/>
    <id>http://FlashLightNing.github.io/2016/04/07/混沌序列图像加密传输/</id>
    <published>2016-04-07T14:02:40.000Z</published>
    <updated>2016-04-07T15:49:07.158Z</updated>
    
    <content type="html">&lt;p&gt;&lt;strong&gt;离散时间混沌序列图像加密解密大致有以下几个步骤:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://baike.baidu.com/link?url=DJKZliiFPW-M_9jVWjt99glbS0RryObOFWuA6Nt2ZN-SfzdE3VNYO5jqgShK5ob0EJ9GGqlG0ncFhmWzaqGpu_&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;猫脸映射(也叫Arnold变换)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;混沌加密&lt;/li&gt;
&lt;li&gt;混沌解密&lt;/li&gt;
&lt;li&gt;猫脸逆映射&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;踩了以下几个坑：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;如何读取图片将其转为像素数组&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;如何将处理好的像素数组转为图片&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ImageIO.read(File file) =null的情况，但是图片文件却又是真实存在&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;循环迭代猫脸映射的时候，用数组1=数组2的方式，使得两个数组的引用是一样的，而导致修改数组1引起数组2的改变，然后发现映射出错。&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;处理思路&quot;&gt;&lt;a href=&quot;#处理思路&quot; class=&quot;headerlink&quot; title=&quot;处理思路&quot;&gt;&lt;/a&gt;处理思路&lt;/h2&gt;&lt;p&gt; &amp;#160; &amp;#160; &amp;#160; &amp;#160;&lt;strong&gt;主要涉及了Java的图像处理方面的API，如读取图像，读取图像像素数组：&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;       BufferedImage image = ImageIO.read(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; File(imgPath));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			N = image.getWidth();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			array = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt;[N][N];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			rgbArray = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;[N * N + &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//从(0,0)开始，宽度为N,高度N（猫脸映射要求长宽一致）,offset=0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			rgbArray = image.getRGB(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, N, N, rgbArray, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, N);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; N; i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; j = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; j &amp;lt; N; j++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					Color color = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Color(rgbArray[j * N + i]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					array[i][j] = color.getRed() / &lt;span class=&quot;number&quot;&gt;255.0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;将像素数组转为一张图片：&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt; public static void changeArrayToImage(double[][] array, String path,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			String process) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			//数组长度，即图片大小&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		int N = array.length;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		System.out.println(process + &amp;quot;:&amp;quot; + N);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		//TYPE_BYTE_GRAY表示是灰度图片&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		BufferedImage image = new BufferedImage(N, N,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				BufferedImage.TYPE_BYTE_GRAY);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		for (int i = 0; i &amp;lt; N; i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			for (int j = 0; j &amp;lt; N; j++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			/*本来是从0-1的double型数组，将他变成0-255范围的像  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  素值，选择让R=G=B=灰度值，根据这个生成了一个color对象，然后得到  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;这个对象的RGB值（在Java里面是一个整数，不同的位数表示不同的值）  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;，然后绘制在(X,Y)点。这样就完成了从像素数组到图片的过程*/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				int gray = (int) (array[i][j] * 255);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				int rgb = new Color(gray, gray, gray).getRGB();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				image.setRGB(i, j, rgb);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		try &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			ImageIO.write(image, &amp;quot;jpg&amp;quot;, new File(path));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125; catch (IOException e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			e.printStackTrace();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		System.out.println(process + &amp;quot;:数组转换图片成功,路径:&amp;quot; + path);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这两个方法在算法中用到比较多，因为我把每个步骤处理之后得到的数组都画成图片，这样可以直观的看到效果：&lt;br&gt;原图:&lt;br&gt;&lt;img src=&quot;http://7xsmif.com2.z0.glb.clouddn.com/image/java/lena.jpg&quot; width=&quot;300&quot; height=&quot;300&quot;&gt;&lt;/p&gt;
&lt;p&gt;猫脸映射之后得到的图像&lt;img src=&quot;http://7xsmif.com2.z0.glb.clouddn.com/image/java/after_arnoldChange_image_path.jpg&quot; width=&quot;300&quot; height=&quot;300&quot;&gt;&lt;br&gt;这只是迭代了5次之后得到的效果，&lt;strong&gt;猫脸映射存在一定的周期，所以也不是迭代次数越大越好&lt;/strong&gt;&lt;br&gt;前面读取图像还有一个坑，就是&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;BufferedImage image = ImageIO.read(new File(imgPath));&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;它只能读取常用的一些图片格式，如&lt;/p&gt;
&lt;p&gt;-&lt;strong&gt;BMP, bmp, jpg, JPG, wbmp,&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;jpeg, png, PNG, JPEG, &lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;WBMP, GIF, gif.&lt;/strong&gt;&lt;br&gt;而&lt;a href=&quot;http://baike.baidu.com/link?url=S4G2koOmL-zYfIaWKdn8OUy5fpQwPUcz7BanJdxcB6msMMT6Lk5q-kbDLPsO-qe-2gOR5fXhv6Imy3rR2MoBEWjKwObY1TLedhUcmCo-_vG&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;tiff&lt;/a&gt;格式的图片不能读取，因此会报&lt;strong&gt;ImageIO.read(new File(imgPath))=null&lt;/strong&gt;的错误。而且有些后缀名是jpg的图片也不能，是因为它只是改了文件后缀而已，实际上还是tiff格式的图片。&lt;h3 id=&quot;那么该怎么区分它们？怎么将tiff格式图片转为其他类型图片呢？&quot;&gt;&lt;a href=&quot;#那么该怎么区分它们？怎么将tiff格式图片转为其他类型图片呢？&quot; class=&quot;headerlink&quot; title=&quot;那么该怎么区分它们？怎么将tiff格式图片转为其他类型图片呢？&quot;&gt;&lt;/a&gt;那么该怎么区分它们？怎么将tiff格式图片转为其他类型图片呢？&lt;/h3&gt;在下一篇博客里面贴出区分方法及代码&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;离散时间混沌序列图像加密解密大致有以下几个步骤:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://baike.baidu.com/link?url=DJKZliiFPW-M_9jVWjt99glbS0RryObOFWuA6Nt2ZN-SfzdE3VNYO5jqgShK5ob0EJ9GGqlG0ncFhmWzaqGpu_&quot;&gt;猫脸映射(也叫Arnold变换)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;混沌加密&lt;/li&gt;
&lt;li&gt;混沌解密&lt;/li&gt;
&lt;li&gt;猫脸逆映射&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;踩了以下几个坑：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;如何读取图片将其转为像素数组&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;如何将处理好的像素数组转为图片&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ImageIO.read(File file) =null的情况，但是图片文件却又是真实存在&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;循环迭代猫脸映射的时候，用数组1=数组2的方式，使得两个数组的引用是一样的，而导致修改数组1引起数组2的改变，然后发现映射出错。&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="java" scheme="http://FlashLightNing.github.io/tags/java/"/>
    
      <category term="图像加密" scheme="http://FlashLightNing.github.io/tags/%E5%9B%BE%E5%83%8F%E5%8A%A0%E5%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>About Blog</title>
    <link href="http://FlashLightNing.github.io/2016/04/07/About-Blog/"/>
    <id>http://FlashLightNing.github.io/2016/04/07/About-Blog/</id>
    <published>2016-04-06T16:45:38.000Z</published>
    <updated>2016-04-07T13:30:54.995Z</updated>
    
    <content type="html">&lt;h2 id=&quot;偷得浮生半日闲&quot;&gt;&lt;a href=&quot;#偷得浮生半日闲&quot; class=&quot;headerlink&quot; title=&quot;偷得浮生半日闲&quot;&gt;&lt;/a&gt;偷得浮生半日闲&lt;/h2&gt;&lt;p&gt;&amp;#160; &amp;#160; &amp;#160; &amp;#160;走走停停，大学马上快毕业了，即将迈上人生的新阶段。可以说这最后几个月是学生的最后阶段。大学四年，也没学什么，玩着过，是一年，学着过，是一年，睡着过，是一年。懂得了每个人都有每个人的路，也许殊途同归，也许背道而驰。每个人对人生的追求，对人生的意义不一样。&lt;strong&gt;唯一一样的或许是把生活中的点滴美好记录在身边。这也是我想弄这个博客的原因&lt;/strong&gt;.&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;&amp;#160; &amp;#160; &amp;#160; &amp;#160;&lt;strong&gt;每个人生的阶段都有它的意义，都有它的美好，都有它的伙伴，而我想把它记录下来&lt;/strong&gt;。或许当我老后，翻看这个网站的每一篇博客，都还能体会到当时写博客的心境，感慨时光易逝。而我也不习惯发说说，发微博。也许是熟人太多，反而限制了我说话的自由。&lt;strong&gt;On the Internet, nobody knows you’re a dog&lt;/strong&gt; 我也可以在这个博客上写我所想，记我所玩。生活不仅仅是工作，生活处处是美好。珍惜最后的大学时光。  因此，我也会经常发游玩的照片到博客。想起来大学四年倒是拍了许多照片，不过都是随手一拍。偶尔翻看照片，还能回味，也许有刚上大一时寝室几人在哪家餐厅一起吃饭的，也许有上课时谁谁谁偷偷睡觉的。既然同学，就是缘分。每个阶段都有每个阶段的伙伴，想想他陪伴着你度过了人生了一个重要阶段。知己朋友无需太多，但是也需要培养。有那么几个能以后一起吃吃饭，畅谈就够了。&lt;br&gt;&amp;#160; &amp;#160; &amp;#160; &amp;#160;也许自己还是太感性了，夜深人静的时候，种种思绪涌上心头。但是人生需要拼搏，需要努力。&lt;strong&gt;20岁的贪玩 造就了30岁的无奈！ 30岁的无奈成就了40岁的无为！ 40岁的无为奠定了50岁的失败！ 50岁的失败酿造了一辈子的碌碌无为！&lt;/strong&gt;虽然夸张了一些  只是希望自己在一直努力前行的时候，别忘了身边的朋友和美好生活，把它记录下来吧  它是我一辈子的财富！！&lt;br&gt;&amp;#160; &amp;#160; &amp;#160; &amp;#160;&lt;strong&gt;On the Internet, nobody knows you’re a dog&lt;/strong&gt;&lt;br&gt;&amp;#160; &amp;#160; &amp;#160; &amp;#160;此时窗外下着大雨，一个舍友在翻墙，一个舍友在玩LOL，而我在用MarkdownPad2第一次写文章！  本来想把最近忙的毕设做个总结写个博客的，想想尼玛开个博客就知道写技术，真是没情趣，于是有了这篇《听雨》&lt;br&gt;&amp;#160; &amp;#160; &amp;#160; &amp;#160;–记录于2016年4月7日1点13分。雨&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;偷得浮生半日闲&quot;&gt;&lt;a href=&quot;#偷得浮生半日闲&quot; class=&quot;headerlink&quot; title=&quot;偷得浮生半日闲&quot;&gt;&lt;/a&gt;偷得浮生半日闲&lt;/h2&gt;&lt;p&gt;&amp;#160; &amp;#160; &amp;#160; &amp;#160;走走停停，大学马上快毕业了，即将迈上人生的新阶段。可以说这最后几个月是学生的最后阶段。大学四年，也没学什么，玩着过，是一年，学着过，是一年，睡着过，是一年。懂得了每个人都有每个人的路，也许殊途同归，也许背道而驰。每个人对人生的追求，对人生的意义不一样。&lt;strong&gt;唯一一样的或许是把生活中的点滴美好记录在身边。这也是我想弄这个博客的原因&lt;/strong&gt;.
    
    </summary>
    
    
      <category term="生活" scheme="http://FlashLightNing.github.io/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>hexo&#39;</title>
    <link href="http://FlashLightNing.github.io/2016/04/05/hexo/"/>
    <id>http://FlashLightNing.github.io/2016/04/05/hexo/</id>
    <published>2016-04-05T09:33:50.000Z</published>
    <updated>2016-04-05T09:35:16.656Z</updated>
    
    <content type="html">&lt;h2 id=&quot;hello-hexo-It-is-a-test&quot;&gt;&lt;a href=&quot;#hello-hexo-It-is-a-test&quot; class=&quot;headerlink&quot; title=&quot;hello,hexo.It is a test&quot;&gt;&lt;/a&gt;hello,hexo.It is a test&lt;/h2&gt;</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;hello-hexo-It-is-a-test&quot;&gt;&lt;a href=&quot;#hello-hexo-It-is-a-test&quot; class=&quot;headerlink&quot; title=&quot;hello,hexo.It is a test&quot;&gt;&lt;/a&gt;hello,hexo.It is 
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://FlashLightNing.github.io/2016/04/05/hello-world/"/>
    <id>http://FlashLightNing.github.io/2016/04/05/hello-world/</id>
    <published>2016-04-05T03:38:07.661Z</published>
    <updated>2016-04-07T13:21:16.756Z</updated>
    
    <content type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub&lt;/a&gt;.&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;Create-a-new-post&quot;&gt;&lt;a href=&quot;#Create-a-new-post&quot; class=&quot;headerlink&quot; title=&quot;Create a new post&quot;&gt;&lt;/a&gt;Create a new post&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo new &lt;span class=&quot;string&quot;&gt;&quot;My New Post&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/writing.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Writing&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Run-server&quot;&gt;&lt;a href=&quot;#Run-server&quot; class=&quot;headerlink&quot; title=&quot;Run server&quot;&gt;&lt;/a&gt;Run server&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo server&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/server.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Server&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Generate-static-files&quot;&gt;&lt;a href=&quot;#Generate-static-files&quot; class=&quot;headerlink&quot; title=&quot;Generate static files&quot;&gt;&lt;/a&gt;Generate static files&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo generate&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/generating.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Generating&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Deploy-to-remote-sites&quot;&gt;&lt;a href=&quot;#Deploy-to-remote-sites&quot; class=&quot;headerlink&quot; title=&quot;Deploy to remote sites&quot;&gt;&lt;/a&gt;Deploy to remote sites&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo deploy&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/deployment.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Deployment&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot;&gt;GitHub&lt;/a&gt;.&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
